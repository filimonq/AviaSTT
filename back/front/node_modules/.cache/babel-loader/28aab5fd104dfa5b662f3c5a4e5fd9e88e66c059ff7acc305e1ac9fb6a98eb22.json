{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\AviaSTT\\\\back\\\\front\\\\src\\\\components\\\\VoiceRecorder.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"./ui/button\";\nimport { Card, CardContent } from \"./ui/card\";\nimport { Mic, Square } from \"lucide-react\";\nimport \"./VoiceRecorder.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VoiceRecorder() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [logs, setLogs] = useState([]);\n  const [history, setHistory] = useState([]);\n  const mediaRecorderRef = useRef(null);\n  const audioStreamRef = useRef(null);\n  const websocketRef = useRef(null);\n\n  // Fetch history data from the server\n  const fetchHistory = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8000/history\");\n      const data = await res.json();\n      setHistory(data);\n    } catch (err) {\n      console.error(\"Error fetching history:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchHistory();\n    return () => {\n      // Clean up on unmount\n      if (websocketRef.current) {\n        websocketRef.current.close();\n      }\n      if (audioStreamRef.current) {\n        audioStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  // Start recording and opening websocket connection\n  const startRecording = async () => {\n    try {\n      audioStreamRef.current = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      websocketRef.current = new WebSocket(\"ws://localhost:8000/ws\");\n      websocketRef.current.onopen = () => {\n        console.log(\"WebSocket connected\");\n      };\n      websocketRef.current.onmessage = event => {\n        setLogs(prevLogs => [...prevLogs, event.data]);\n        fetchHistory(); // This can be optimized to avoid unnecessary fetching\n      };\n      websocketRef.current.onerror = error => {\n        console.error(\"WebSocket error:\", error);\n      };\n      websocketRef.current.onclose = () => {\n        console.log(\"WebSocket connection closed\");\n        setIsRecording(false); // Останавливаем запись при закрытии соединения\n      };\n      mediaRecorderRef.current = new MediaRecorder(audioStreamRef.current);\n      mediaRecorderRef.current.ondataavailable = event => {\n        var _websocketRef$current;\n        if (event.data.size > 0 && ((_websocketRef$current = websocketRef.current) === null || _websocketRef$current === void 0 ? void 0 : _websocketRef$current.readyState) === WebSocket.OPEN) {\n          websocketRef.current.send(event.data);\n        }\n      };\n      mediaRecorderRef.current.onstop = () => {\n        var _websocketRef$current2;\n        if (((_websocketRef$current2 = websocketRef.current) === null || _websocketRef$current2 === void 0 ? void 0 : _websocketRef$current2.readyState) === WebSocket.OPEN) {\n          websocketRef.current.send(\"STOP\"); // Отправляем сообщение о завершении записи\n        }\n      };\n      mediaRecorderRef.current.start(1000); // Start recording with chunks of 1 second\n      setIsRecording(true);\n    } catch (error) {\n      console.error(\"Error accessing microphone:\", error);\n      alert(\"Please allow microphone access.\");\n    }\n  };\n\n  // Stop recording and close connections\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n    }\n    if (audioStreamRef.current) {\n      audioStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    setIsRecording(false);\n  };\n\n  // Clear data endpoint call\n  const clearData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/clear\", {\n        method: \"POST\"\n      });\n      if (response.ok) {\n        setLogs([]);\n        fetchHistory();\n      } else {\n        console.error(\"Error clearing data\");\n      }\n    } catch (err) {\n      console.error(\"Error clearing data:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recorder-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recorder-circle\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `recorder-circle-background ${isRecording ? \"recording\" : \"idle\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: isRecording ? \"destructive\" : \"default\",\n            size: \"icon\",\n            className: \"recorder-button\",\n            onClick: isRecording ? stopRecording : startRecording,\n            children: isRecording ? /*#__PURE__*/_jsxDEV(Square, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n              className: \"h-6 w-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `recorder-status ${isRecording ? \"recording\" : \"idle\"}`,\n        children: isRecording ? \"Recording...\" : \"Press the microphone to start recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: clearData,\n          className: \"save-button\",\n          children: \"Clear Data (Save to History)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Logs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            padding: \"10px\",\n            height: \"150px\",\n            overflowY: \"auto\"\n          },\n          children: logs.map((log, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: log\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"History (Last 5):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: history.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(VoiceRecorder, \"4eUfbCuuRkAl4CXIpLAuCGFsd7Q=\");\n_c = VoiceRecorder;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"names":["useState","useRef","useEffect","Button","Card","CardContent","Mic","Square","jsxDEV","_jsxDEV","VoiceRecorder","_s","isRecording","setIsRecording","logs","setLogs","history","setHistory","mediaRecorderRef","audioStreamRef","websocketRef","fetchHistory","res","fetch","data","json","err","console","error","current","close","getTracks","forEach","track","stop","startRecording","navigator","mediaDevices","getUserMedia","audio","WebSocket","onopen","log","onmessage","event","prevLogs","onerror","onclose","MediaRecorder","ondataavailable","_websocketRef$current","size","readyState","OPEN","send","onstop","_websocketRef$current2","start","alert","stopRecording","clearData","response","method","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","style","marginTop","border","padding","height","overflowY","map","idx","item","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/AviaSTT/back/front/src/components/VoiceRecorder.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { Button } from \"./ui/button\";\r\nimport { Card, CardContent } from \"./ui/card\";\r\nimport { Mic, Square } from \"lucide-react\";\r\nimport \"./VoiceRecorder.css\";\r\n\r\nexport default function VoiceRecorder() {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [logs, setLogs] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioStreamRef = useRef(null);\r\n  const websocketRef = useRef(null);\r\n\r\n  // Fetch history data from the server\r\n  const fetchHistory = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:8000/history\");\r\n      const data = await res.json();\r\n      setHistory(data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching history:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHistory();\r\n    return () => {\r\n      // Clean up on unmount\r\n      if (websocketRef.current) {\r\n        websocketRef.current.close();\r\n      }\r\n      if (audioStreamRef.current) {\r\n        audioStreamRef.current.getTracks().forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Start recording and opening websocket connection\r\n  const startRecording = async () => {\r\n    try {\r\n      audioStreamRef.current = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n\r\n      websocketRef.current = new WebSocket(\"ws://localhost:8000/ws\");\r\n\r\n      websocketRef.current.onopen = () => {\r\n        console.log(\"WebSocket connected\");\r\n      };\r\n\r\n      websocketRef.current.onmessage = (event) => {\r\n        setLogs((prevLogs) => [...prevLogs, event.data]);\r\n        fetchHistory(); // This can be optimized to avoid unnecessary fetching\r\n      };\r\n\r\n      websocketRef.current.onerror = (error) => {\r\n        console.error(\"WebSocket error:\", error);\r\n      };\r\n\r\n      websocketRef.current.onclose = () => {\r\n        console.log(\"WebSocket connection closed\");\r\n        setIsRecording(false); // Останавливаем запись при закрытии соединения\r\n      };\r\n\r\n      mediaRecorderRef.current = new MediaRecorder(audioStreamRef.current);\r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        if (event.data.size > 0 && websocketRef.current?.readyState === WebSocket.OPEN) {\r\n          websocketRef.current.send(event.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.onstop = () => {\r\n        if (websocketRef.current?.readyState === WebSocket.OPEN) {\r\n          websocketRef.current.send(\"STOP\"); // Отправляем сообщение о завершении записи\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.start(1000); // Start recording with chunks of 1 second\r\n      setIsRecording(true);\r\n    } catch (error) {\r\n      console.error(\"Error accessing microphone:\", error);\r\n      alert(\"Please allow microphone access.\");\r\n    }\r\n  };\r\n\r\n  // Stop recording and close connections\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && isRecording) {\r\n      mediaRecorderRef.current.stop();\r\n    }\r\n    if (audioStreamRef.current) {\r\n      audioStreamRef.current.getTracks().forEach((track) => track.stop());\r\n    }\r\n    setIsRecording(false);\r\n  };\r\n\r\n  // Clear data endpoint call\r\n  const clearData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/clear\", { method: \"POST\" });\r\n      if (response.ok) {\r\n        setLogs([]);\r\n        fetchHistory();\r\n      } else {\r\n        console.error(\"Error clearing data\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error clearing data:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"card\">\r\n      <CardContent className=\"card-content\">\r\n        <div className=\"recorder-container\">\r\n          <div className=\"recorder-circle\">\r\n            <div className={`recorder-circle-background ${isRecording ? \"recording\" : \"idle\"}`}></div>\r\n            <Button\r\n              variant={isRecording ? \"destructive\" : \"default\"}\r\n              size=\"icon\"\r\n              className=\"recorder-button\"\r\n              onClick={isRecording ? stopRecording : startRecording}\r\n            >\r\n              {isRecording ? <Square className=\"h-6 w-6\" /> : <Mic className=\"h-6 w-6\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className={`recorder-status ${isRecording ? \"recording\" : \"idle\"}`}>\r\n          {isRecording ? \"Recording...\" : \"Press the microphone to start recording\"}\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <Button onClick={clearData} className=\"save-button\">Clear Data (Save to History)</Button>\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h3>Logs:</h3>\r\n          <div style={{ border: \"1px solid #ccc\", padding: \"10px\", height: \"150px\", overflowY: \"auto\" }}>\r\n            {logs.map((log, idx) => (\r\n              <div key={idx}>{log}</div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h3>History (Last 5):</h3>\r\n          <ul>\r\n            {history.map((item, idx) => (\r\n              <li key={idx}>{item}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}