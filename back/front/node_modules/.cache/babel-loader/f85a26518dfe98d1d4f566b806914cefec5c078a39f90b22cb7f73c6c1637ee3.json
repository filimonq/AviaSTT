{"ast":null,"code":"import{useState,useRef,useEffect}from\"react\";import{Button}from\"./ui/button\";import{Card,CardContent}from\"./ui/card\";import{Mic,Square}from\"lucide-react\";import\"./VoiceRecorder.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function VoiceRecorder(){const[isRecording,setIsRecording]=useState(false);const[logs,setLogs]=useState([]);const[history,setHistory]=useState([]);const mediaRecorderRef=useRef(null);const audioStreamRef=useRef(null);const websocketRef=useRef(null);// Fetch history data from the server\nconst fetchHistory=async()=>{try{const res=await fetch(\"http://localhost:8000/history\");const data=await res.json();setHistory(data);}catch(err){console.error(\"Error fetching history:\",err);}};useEffect(()=>{fetchHistory();return()=>{// Clean up on unmount\nif(websocketRef.current){websocketRef.current.close();}if(audioStreamRef.current){audioStreamRef.current.getTracks().forEach(track=>track.stop());}};},[]);// Start recording and opening websocket connection\nconst startRecording=async()=>{try{audioStreamRef.current=await navigator.mediaDevices.getUserMedia({audio:true});websocketRef.current=new WebSocket(\"ws://localhost:8000/ws\");websocketRef.current.onopen=()=>{console.log(\"WebSocket connected\");};websocketRef.current.onmessage=event=>{setLogs(prevLogs=>[...prevLogs,event.data]);fetchHistory();// This can be optimized to avoid unnecessary fetching\n};websocketRef.current.onerror=error=>{console.error(\"WebSocket error:\",error);};websocketRef.current.onclose=()=>{console.log(\"WebSocket connection closed\");setIsRecording(false);// Останавливаем запись при закрытии соединения\n};mediaRecorderRef.current=new MediaRecorder(audioStreamRef.current);mediaRecorderRef.current.ondataavailable=event=>{var _websocketRef$current;if(event.data.size>0&&((_websocketRef$current=websocketRef.current)===null||_websocketRef$current===void 0?void 0:_websocketRef$current.readyState)===WebSocket.OPEN){websocketRef.current.send(event.data);}};mediaRecorderRef.current.onstop=()=>{var _websocketRef$current2;if(((_websocketRef$current2=websocketRef.current)===null||_websocketRef$current2===void 0?void 0:_websocketRef$current2.readyState)===WebSocket.OPEN){websocketRef.current.send(\"STOP\");// Отправляем сообщение о завершении записи\n}};mediaRecorderRef.current.start(1000);// Start recording with chunks of 1 second\nsetIsRecording(true);}catch(error){console.error(\"Error accessing microphone:\",error);alert(\"Please allow microphone access.\");}};// Stop recording and close connections\nconst stopRecording=()=>{if(mediaRecorderRef.current&&isRecording){mediaRecorderRef.current.stop();}if(audioStreamRef.current){audioStreamRef.current.getTracks().forEach(track=>track.stop());}setIsRecording(false);};// Clear data endpoint call\nconst clearData=async()=>{try{const response=await fetch(\"http://localhost:8000/clear\",{method:\"POST\"});if(response.ok){setLogs([]);fetchHistory();}else{console.error(\"Error clearing data\");}}catch(err){console.error(\"Error clearing data:\",err);}};return/*#__PURE__*/_jsx(Card,{className:\"card\",children:/*#__PURE__*/_jsxs(CardContent,{className:\"card-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Voice Recorder\"}),/*#__PURE__*/_jsx(\"div\",{className:\"recorder-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"recorder-circle\",children:[/*#__PURE__*/_jsx(\"div\",{className:`recorder-circle-background ${isRecording?\"recording\":\"idle\"}`}),/*#__PURE__*/_jsx(Button,{variant:isRecording?\"destructive\":\"default\",size:\"icon\",className:\"recorder-button\",onClick:isRecording?stopRecording:startRecording,children:isRecording?/*#__PURE__*/_jsx(Square,{className:\"h-6 w-6\"}):/*#__PURE__*/_jsx(Mic,{className:\"h-6 w-6\"})})]})}),/*#__PURE__*/_jsx(\"div\",{className:`recorder-status ${isRecording?\"recording\":\"idle\"}`,children:isRecording?\"Recording...\":\"Press the microphone to start recording\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"20px\"},children:/*#__PURE__*/_jsx(Button,{onClick:clearData,children:\"Clear Data (Save to History)\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"20px\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Logs:\"}),/*#__PURE__*/_jsx(\"div\",{style:{border:\"1px solid #ccc\",padding:\"10px\",height:\"150px\",overflowY:\"auto\"},children:logs.map((log,idx)=>/*#__PURE__*/_jsx(\"div\",{children:log},idx))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"20px\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"History (Last 5):\"}),/*#__PURE__*/_jsx(\"ul\",{children:history.map((item,idx)=>/*#__PURE__*/_jsx(\"li\",{children:item},idx))})]})]})});}","map":{"version":3,"names":["useState","useRef","useEffect","Button","Card","CardContent","Mic","Square","jsx","_jsx","jsxs","_jsxs","VoiceRecorder","isRecording","setIsRecording","logs","setLogs","history","setHistory","mediaRecorderRef","audioStreamRef","websocketRef","fetchHistory","res","fetch","data","json","err","console","error","current","close","getTracks","forEach","track","stop","startRecording","navigator","mediaDevices","getUserMedia","audio","WebSocket","onopen","log","onmessage","event","prevLogs","onerror","onclose","MediaRecorder","ondataavailable","_websocketRef$current","size","readyState","OPEN","send","onstop","_websocketRef$current2","start","alert","stopRecording","clearData","response","method","ok","className","children","variant","onClick","style","marginTop","border","padding","height","overflowY","map","idx","item"],"sources":["C:/Users/Asus/Desktop/AviaSTT/back/front/src/components/VoiceRecorder.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { Button } from \"./ui/button\";\r\nimport { Card, CardContent } from \"./ui/card\";\r\nimport { Mic, Square } from \"lucide-react\";\r\nimport \"./VoiceRecorder.css\";\r\n\r\nexport default function VoiceRecorder() {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [logs, setLogs] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioStreamRef = useRef(null);\r\n  const websocketRef = useRef(null);\r\n\r\n  // Fetch history data from the server\r\n  const fetchHistory = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:8000/history\");\r\n      const data = await res.json();\r\n      setHistory(data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching history:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHistory();\r\n    return () => {\r\n      // Clean up on unmount\r\n      if (websocketRef.current) {\r\n        websocketRef.current.close();\r\n      }\r\n      if (audioStreamRef.current) {\r\n        audioStreamRef.current.getTracks().forEach((track) => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Start recording and opening websocket connection\r\n  const startRecording = async () => {\r\n    try {\r\n      audioStreamRef.current = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n\r\n      websocketRef.current = new WebSocket(\"ws://localhost:8000/ws\");\r\n\r\n      websocketRef.current.onopen = () => {\r\n        console.log(\"WebSocket connected\");\r\n      };\r\n\r\n      websocketRef.current.onmessage = (event) => {\r\n        setLogs((prevLogs) => [...prevLogs, event.data]);\r\n        fetchHistory(); // This can be optimized to avoid unnecessary fetching\r\n      };\r\n\r\n      websocketRef.current.onerror = (error) => {\r\n        console.error(\"WebSocket error:\", error);\r\n      };\r\n\r\n      websocketRef.current.onclose = () => {\r\n        console.log(\"WebSocket connection closed\");\r\n        setIsRecording(false); // Останавливаем запись при закрытии соединения\r\n      };\r\n\r\n      mediaRecorderRef.current = new MediaRecorder(audioStreamRef.current);\r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        if (event.data.size > 0 && websocketRef.current?.readyState === WebSocket.OPEN) {\r\n          websocketRef.current.send(event.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.onstop = () => {\r\n        if (websocketRef.current?.readyState === WebSocket.OPEN) {\r\n          websocketRef.current.send(\"STOP\"); // Отправляем сообщение о завершении записи\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.start(1000); // Start recording with chunks of 1 second\r\n      setIsRecording(true);\r\n    } catch (error) {\r\n      console.error(\"Error accessing microphone:\", error);\r\n      alert(\"Please allow microphone access.\");\r\n    }\r\n  };\r\n\r\n  // Stop recording and close connections\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && isRecording) {\r\n      mediaRecorderRef.current.stop();\r\n    }\r\n    if (audioStreamRef.current) {\r\n      audioStreamRef.current.getTracks().forEach((track) => track.stop());\r\n    }\r\n    setIsRecording(false);\r\n  };\r\n\r\n  // Clear data endpoint call\r\n  const clearData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/clear\", { method: \"POST\" });\r\n      if (response.ok) {\r\n        setLogs([]);\r\n        fetchHistory();\r\n      } else {\r\n        console.error(\"Error clearing data\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error clearing data:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"card\">\r\n      <CardContent className=\"card-content\">\r\n        <h2>Voice Recorder</h2>\r\n        <div className=\"recorder-container\">\r\n          <div className=\"recorder-circle\">\r\n            <div className={`recorder-circle-background ${isRecording ? \"recording\" : \"idle\"}`}></div>\r\n            <Button\r\n              variant={isRecording ? \"destructive\" : \"default\"}\r\n              size=\"icon\"\r\n              className=\"recorder-button\"\r\n              onClick={isRecording ? stopRecording : startRecording}\r\n            >\r\n              {isRecording ? <Square className=\"h-6 w-6\" /> : <Mic className=\"h-6 w-6\" />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className={`recorder-status ${isRecording ? \"recording\" : \"idle\"}`}>\r\n          {isRecording ? \"Recording...\" : \"Press the microphone to start recording\"}\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <Button onClick={clearData}>Clear Data (Save to History)</Button>\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h3>Logs:</h3>\r\n          <div style={{ border: \"1px solid #ccc\", padding: \"10px\", height: \"150px\", overflowY: \"auto\" }}>\r\n            {logs.map((log, idx) => (\r\n              <div key={idx}>{log}</div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h3>History (Last 5):</h3>\r\n          <ul>\r\n            {history.map((item, idx) => (\r\n              <li key={idx}>{item}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}