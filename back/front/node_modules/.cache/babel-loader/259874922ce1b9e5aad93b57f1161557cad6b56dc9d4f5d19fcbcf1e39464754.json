{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\whats-up\\\\src\\\\components\\\\VoiceRecorder.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"./ui/button\";\nimport { Card, CardContent } from \"./ui/card\";\nimport { Mic, Square, Play, Save, Trash2 } from \"lucide-react\";\nimport \"./VoiceRecorder.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VoiceRecorder() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordings, setRecordings] = useState([]);\n  const [history, setHistory] = useState([]);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const audioElementRef = useRef(null);\n  const websocketRef = useRef(null);\n  useEffect(() => {\n    fetchHistory();\n  }, []);\n  const fetchHistory = async () => {\n    const res = await fetch(\"/history\");\n    const data = await res.json();\n    setHistory(data);\n  };\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n      websocketRef.current = new WebSocket(\"ws://localhost:8000/ws\");\n      websocketRef.current.onmessage = event => {\n        console.log(\"Received from server:\", event.data);\n        fetchHistory();\n      };\n      mediaRecorderRef.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          websocketRef.current.send(event.data);\n          audioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/wav\"\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setRecordings(prev => [...prev, {\n          url: audioUrl,\n          blob: audioBlob\n        }]);\n        stream.getTracks().forEach(track => track.stop());\n      };\n      mediaRecorderRef.current.start(1000);\n      setIsRecording(true);\n    } catch (error) {\n      console.error(\"Error accessing microphone:\", error);\n      alert(\"Could not access your microphone. Please check permissions.\");\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      if (websocketRef.current) {\n        websocketRef.current.close();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recorder-container\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: isRecording ? \"destructive\" : \"default\",\n          size: \"icon\",\n          className: \"recorder-button\",\n          onClick: isRecording ? stopRecording : startRecording,\n          children: isRecording ? /*#__PURE__*/_jsxDEV(Square, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recordings-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-medium mb-3\",\n          children: \"Your Recordings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), history.length > 0 ? history.map((record, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium\",\n            children: [\"\\u0417\\u0430\\u043F\\u0438\\u0441\\u044C \", record]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u043F\\u0443\\u0441\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(VoiceRecorder, \"x93qJxmQfu33htrK3NQohjsN1B8=\");\n_c = VoiceRecorder;\nvar _c;\n$RefreshReg$(_c, \"VoiceRecorder\");","map":{"version":3,"names":["useState","useRef","useEffect","Button","Card","CardContent","Mic","Square","Play","Save","Trash2","jsxDEV","_jsxDEV","VoiceRecorder","_s","isRecording","setIsRecording","recordings","setRecordings","history","setHistory","mediaRecorderRef","audioChunksRef","audioElementRef","websocketRef","fetchHistory","res","fetch","data","json","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","WebSocket","onmessage","event","console","log","ondataavailable","size","send","push","onstop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","prev","url","blob","getTracks","forEach","track","stop","start","error","alert","stopRecording","close","className","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","record","index","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/whats-up/src/components/VoiceRecorder.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\nimport { Button } from \"./ui/button\";\r\nimport { Card, CardContent } from \"./ui/card\";\r\nimport { Mic, Square, Play, Save, Trash2 } from \"lucide-react\";\r\nimport \"./VoiceRecorder.css\";\r\n\r\nexport default function VoiceRecorder() {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recordings, setRecordings] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n  const audioElementRef = useRef(null);\r\n  const websocketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    fetchHistory();\r\n  }, []);\r\n\r\n  const fetchHistory = async () => {\r\n    const res = await fetch(\"/history\");\r\n    const data = await res.json();\r\n    setHistory(data);\r\n  };\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      mediaRecorderRef.current = new MediaRecorder(stream);\r\n      audioChunksRef.current = [];\r\n      websocketRef.current = new WebSocket(\"ws://localhost:8000/ws\");\r\n\r\n      websocketRef.current.onmessage = (event) => {\r\n        console.log(\"Received from server:\", event.data);\r\n        fetchHistory();\r\n      };\r\n\r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          websocketRef.current.send(event.data);\r\n          audioChunksRef.current.push(event.data);\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.onstop = () => {\r\n        const audioBlob = new Blob(audioChunksRef.current, { type: \"audio/wav\" });\r\n        const audioUrl = URL.createObjectURL(audioBlob);\r\n        setRecordings((prev) => [...prev, { url: audioUrl, blob: audioBlob }]);\r\n        stream.getTracks().forEach((track) => track.stop());\r\n      };\r\n\r\n      mediaRecorderRef.current.start(1000);\r\n      setIsRecording(true);\r\n    } catch (error) {\r\n      console.error(\"Error accessing microphone:\", error);\r\n      alert(\"Could not access your microphone. Please check permissions.\");\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && isRecording) {\r\n      mediaRecorderRef.current.stop();\r\n      setIsRecording(false);\r\n      if (websocketRef.current) {\r\n        websocketRef.current.close();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"card\">\r\n      <CardContent className=\"card-content\">\r\n        <div className=\"recorder-container\">\r\n          <Button\r\n            variant={isRecording ? \"destructive\" : \"default\"}\r\n            size=\"icon\"\r\n            className=\"recorder-button\"\r\n            onClick={isRecording ? stopRecording : startRecording}\r\n          >\r\n            {isRecording ? <Square className=\"h-6 w-6\" /> : <Mic className=\"h-6 w-6\" />}\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"recordings-list\">\r\n          <h3 className=\"font-medium mb-3\">Your Recordings</h3>\r\n          {history.length > 0 ? (\r\n            history.map((record, index) => (\r\n              <div key={index} className=\"recording-item\">\r\n                <div className=\"font-medium\">Запись {record}</div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div>История пуста</div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}